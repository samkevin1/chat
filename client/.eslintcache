[{"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\reportWebVitals.js":"1","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\App.js":"2","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Sidebar\\index.js":"3","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\ChatLogs\\index.js":"4","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Chat\\index.js":"5","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Sidebar\\SidebarOption\\index.js":"6","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\index.js":"7","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\User\\index.jsx":"8","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Pages\\Login\\index.js":"9","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Services\\api.js":"10","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\index.jsx":"11","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Services\\firebase.js":"12","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\Room\\index.jsx":"13"},{"size":362,"mtime":1610022555165,"results":"14","hashOfConfig":"15"},{"size":1325,"mtime":1611590749768,"results":"16","hashOfConfig":"15"},{"size":1527,"mtime":1611597220200,"results":"17","hashOfConfig":"15"},{"size":2359,"mtime":1611671669134,"results":"18","hashOfConfig":"15"},{"size":2805,"mtime":1611671846785,"results":"19","hashOfConfig":"15"},{"size":272,"mtime":1610982582077,"results":"20","hashOfConfig":"15"},{"size":500,"mtime":1610022555165,"results":"21","hashOfConfig":"15"},{"size":1197,"mtime":1611586675770,"results":"22","hashOfConfig":"15"},{"size":586,"mtime":1611584362259,"results":"23","hashOfConfig":"15"},{"size":152,"mtime":1611328424257,"results":"24","hashOfConfig":"15"},{"size":348,"mtime":1611587675730,"results":"25","hashOfConfig":"15"},{"size":559,"mtime":1611578668114,"results":"26","hashOfConfig":"15"},{"size":2150,"mtime":1611596419092,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14oqi1e",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\reportWebVitals.js",[],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\App.js",["61","62"],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Sidebar\\index.js",[],["63","64"],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\ChatLogs\\index.js",["65","66","67"],"import React, { useState, useEffect } from 'react';\r\nimport KeyboardArrowDownRoundedIcon from '@material-ui/icons/KeyboardArrowDownRounded';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Link } from 'react-router-dom';\r\nimport { Avatar , Button } from '@material-ui/core';\r\n\r\nimport {\r\n  useRoomContext\r\n} from \"../../contexts/Room\";\r\nimport './index.css';\r\nimport api from '../../Services/api';\r\n\r\nconst ChatLogs = () => {\r\n\r\n  const {\r\n    rooms,\r\n    fetchRooms,\r\n    setRooms\r\n  } = useRoomContext();\r\n\r\n  const createChat = async () => {\r\n\r\n    const roomName = prompt('Please enter name for the chat room');\r\n\r\n    if (roomName) {\r\n      const response = await api.post('/room/create', {\r\n        name: roomName,\r\n      });\r\n\r\n      const newRoom = response.data.data;\r\n      setRooms(oldState => [...oldState, newRoom]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRooms();\r\n  }, [rooms]);\r\n\r\n  return (\r\n    <div className='chatLogs'>\r\n      <div className='chatLogs_header'>\r\n        <div className='chatLogs_headerLeft'>\r\n          <p className='chatLogs_chat'>Chat</p>\r\n          <p className='chatLogs_recent'>Recent Chats <KeyboardArrowDownRoundedIcon /></p>\r\n        </div>\r\n        {/*The div below is the \"New Chat\" Button*/}\r\n        <div onClick={createChat} className='chatLogs_createChat'><AddIcon /> New Chat</div>\r\n      </div>\r\n      <div className='chatLogs_search'>\r\n        <SearchIcon />\r\n        <input\r\n          placeholder='Search'\r\n          type='text'\r\n        />\r\n      </div>\r\n      <div className='chatLogs_messages'>\r\n        {rooms?.map((room) => (\r\n          <Link to={`/rooms/${room._id}`}>\r\n            <div key={room._id} className='chatLogs_message'>\r\n              <div className='chatLogs_messageLeft'>\r\n                <Avatar src={`https://avatars.dicebear.com/4.5/api/human/${Math.floor(Math.random() * 5000)}.svg`} alt='' />\r\n                <h6 className='chatlogs_messageUserName'>{room.name}</h6>\r\n                <p className='chatLogs_timestamp'>1 minute ago</p>\r\n              </div>\r\n              <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ut risus vel diam consectetur aliquam vitae quis mi.</p>\r\n            </div>\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatLogs;\r\n","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Chat\\index.js",["68","69","70","71","72"],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Components\\Sidebar\\SidebarOption\\index.js",[],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\index.js",[],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\User\\index.jsx",["73","74","75","76"],"import React, { createContext, useContext, useState } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nimport api from '../../Services/api';\r\nimport { auth, provider } from '../../Services/firebase';\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport const  TOKEN = 'chat-messenger-token';\r\n\r\nexport const UserContextProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const user = firebase.auth()?.currentUser;\r\n  const [token, setToken] = useState('');\r\n\r\n  const fetchUser = async () => {\r\n    \r\n    setLoading(l => ({...l, user: true}));\r\n\r\n    try {\r\n      \r\n\r\n    } catch (err) {\r\n      setErrors(e => ({ ...e, user: String(err) }));\r\n      setLoading(l => ({ ...l, user: false }));\r\n    }\r\n    setLoading(l => ({ ...l, user: false }));\r\n  }\r\n\r\n  return <UserContext.Provider value={{\r\n    loading,\r\n    errors,\r\n    user,\r\n    fetchUser,\r\n    token\r\n  }}>{children}</UserContext.Provider>;\r\n};\r\n\r\nexport const useUserContext = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    if (!context) {\r\n        throw Error(\"useUserContext must be in UserContextProvider\");\r\n    }\r\n\r\n    return context;\r\n};","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Pages\\Login\\index.js",["77","78"],"import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './index.css';\r\nimport {\r\n  useUserContext\r\n} from \"../../contexts/User\";\r\nimport api from '../../Services/api';\r\n\r\nconst Login = () => {\r\n\r\n   const {\r\n    user,\r\n    fetchUser\r\n  } = useUserContext();\r\n\r\n  const handleFetchUser = async () => {\r\n    await fetchUser();\r\n  };\r\n\r\n  return (\r\n    <div className='login'>\r\n      <img \r\n        src='' \r\n        alt=\"\" \r\n      />\r\n      <Button type='submit' onClick={handleFetchUser}>LOGIN WITH GOOGLE</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Services\\api.js",[],["79","80"],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\index.jsx",[],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\Services\\firebase.js",[],["81","82"],"C:\\Users\\samue\\Documents\\Projects\\chat-messenger\\client\\src\\contexts\\Room\\index.jsx",["83","84","85"],"import React, { createContext, useContext, useState } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nimport api from '../../Services/api';\r\nimport { auth, provider } from '../../Services/firebase';\r\n\r\nexport const RoomContext = createContext();\r\n\r\nexport const RoomContextProvider = ({ children }) => {\r\n  const [loading, setLoading] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [rooms, setRooms] = useState([]);\r\n  const [messages, setMessages] = useState([]);\r\n  const [room, setRoom] = useState([]);\r\n\r\n  const fetchRooms = async () => {\r\n    \r\n    setLoading(l => ({...l, rooms: true}));\r\n\r\n    try {\r\n      const response = await api.get('/room/get-all');\r\n      setRooms(response.data.data);\r\n\r\n    } catch (err) {\r\n      setErrors(e => ({ ...e, rooms: String(err) }));\r\n      setLoading(l => ({ ...l, rooms: false }));\r\n    }\r\n    setLoading(l => ({ ...l, rooms: false }));\r\n  }\r\n\r\n  const fetchRoomMessages = async (id) => {\r\n    \r\n    setLoading(l => ({...l, rooms: true}));\r\n\r\n    try {\r\n      const response = await api.get(`/room/get-messages/${id}`);\r\n      setMessages(response.data.data);\r\n\r\n    } catch (err) {\r\n      setErrors(e => ({ ...e, rooms: String(err) }));\r\n      setLoading(l => ({ ...l, rooms: false }));\r\n    }\r\n    setLoading(l => ({ ...l, rooms: false }));\r\n  }\r\n\r\n  const fetchRoom = async (id) => {\r\n    \r\n    setLoading(l => ({...l, rooms: true}));\r\n\r\n    try {\r\n      const response = await api.get(`/room/get-by-id/${id}`);\r\n      setRoom(response.data.data);\r\n\r\n    } catch (err) {\r\n      setErrors(e => ({ ...e, rooms: String(err) }));\r\n      setLoading(l => ({ ...l, rooms: false }));\r\n    }\r\n    setLoading(l => ({ ...l, rooms: false }));\r\n  }\r\n\r\n  return <RoomContext.Provider value={{\r\n    loading,\r\n    errors,\r\n    rooms,\r\n    fetchRooms,\r\n    setRooms,\r\n    fetchRoomMessages,\r\n    messages,\r\n    fetchRoom,\r\n    room\r\n  }}>{children}</RoomContext.Provider>;\r\n};\r\n\r\nexport const useRoomContext = () => {\r\n    const context = useContext(RoomContext);\r\n\r\n    if (!context) {\r\n        throw Error(\"useRoomContext must be in RoomContextProvider\");\r\n    }\r\n\r\n    return context;\r\n};",{"ruleId":"86","severity":1,"message":"87","line":11,"column":3,"nodeType":"88","messageId":"89","endLine":11,"endColumn":17},{"ruleId":"86","severity":1,"message":"90","line":13,"column":8,"nodeType":"88","messageId":"89","endLine":13,"endColumn":11},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"86","severity":1,"message":"95","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"96","line":6,"column":19,"nodeType":"88","messageId":"89","endLine":6,"endColumn":25},{"ruleId":"97","severity":1,"message":"98","line":38,"column":6,"nodeType":"99","endLine":38,"endColumn":13,"suggestions":"100"},{"ruleId":"86","severity":1,"message":"101","line":1,"column":38,"nodeType":"88","messageId":"89","endLine":1,"endColumn":44},{"ruleId":"86","severity":1,"message":"102","line":26,"column":5,"nodeType":"88","messageId":"89","endLine":26,"endColumn":15},{"ruleId":"86","severity":1,"message":"103","line":27,"column":5,"nodeType":"88","messageId":"89","endLine":27,"endColumn":13},{"ruleId":"97","severity":1,"message":"104","line":53,"column":6,"nodeType":"99","endLine":53,"endColumn":14,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":57,"column":6,"nodeType":"99","endLine":57,"endColumn":16,"suggestions":"107"},{"ruleId":"86","severity":1,"message":"90","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":11},{"ruleId":"86","severity":1,"message":"108","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"109","line":5,"column":16,"nodeType":"88","messageId":"89","endLine":5,"endColumn":24},{"ruleId":"86","severity":1,"message":"110","line":15,"column":17,"nodeType":"88","messageId":"89","endLine":15,"endColumn":25},{"ruleId":"86","severity":1,"message":"90","line":8,"column":8,"nodeType":"88","messageId":"89","endLine":8,"endColumn":11},{"ruleId":"86","severity":1,"message":"111","line":13,"column":5,"nodeType":"88","messageId":"89","endLine":13,"endColumn":9},{"ruleId":"91","replacedBy":"112"},{"ruleId":"93","replacedBy":"113"},{"ruleId":"91","replacedBy":"114"},{"ruleId":"93","replacedBy":"115"},{"ruleId":"86","severity":1,"message":"116","line":2,"column":8,"nodeType":"88","messageId":"89","endLine":2,"endColumn":16},{"ruleId":"86","severity":1,"message":"108","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":14},{"ruleId":"86","severity":1,"message":"109","line":5,"column":16,"nodeType":"88","messageId":"89","endLine":5,"endColumn":24},"no-unused-vars","'useUserContext' is defined but never used.","Identifier","unusedVar","'api' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'useState' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchRooms'. Either include it or remove the dependency array.","ArrayExpression",["119"],"'useRef' is defined but never used.","'fetchRooms' is assigned a value but never used.","'setRooms' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchRoom'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'fetchRoomMessages' and 'roomId'. Either include them or remove the dependency array.",["121"],"'auth' is defined but never used.","'provider' is defined but never used.","'setToken' is assigned a value but never used.","'user' is assigned a value but never used.",["117"],["118"],["117"],["118"],"'firebase' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [fetchRooms, rooms]",{"range":"128","text":"129"},"Update the dependencies array to be: [fetchRoom, roomId]",{"range":"130","text":"131"},"Update the dependencies array to be: [fetchRoomMessages, messages, roomId]",{"range":"132","text":"133"},[953,960],"[fetchRooms, rooms]",[1309,1317],"[fetchRoom, roomId]",[1380,1390],"[fetchRoomMessages, messages, roomId]"]